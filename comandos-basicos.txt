#Criar um pod com um container a partir de uma image
kubectl run <name-pod> --image-<name-image>

#Buscar os pods
kubectl get pods

#Acompanhar os pods
kubectl get pods --watch

#Exibir informações sobre um pod
kubectl describe pod <name-pod>

#Atualizar configurações de um pod
kubectl edit pod <name-pod>

#Remover um pod (imperativo)
kubectl delete pod <name-pod>

#Remover um pod (declarativo)
kubectl delete -f .\<caminho | name-arquivo>.yaml

#acessar terminal de container dentro do pod
kubectl exec -it <name-pod> -- bash 

#aplicar a partir de arquivo config com uso do annotation
kubectl apply -f <name ou caminho-file>.yaml

#Verificar as mudanças no deployment 
kubectl rollout history deployment <name-deployment>

#Alterar anotação da versão de mudança
kubectl annotate deployment <name-deployment> kubernetes.io/change-cause="msg"

#Realizar rooback de versao
kubectl rollout undo deployment <name-deployment> --to-revision=<number>

#Criando chave secret registry image 
kubectl create secret docker-registry <name>.secret --docker-server <Endereco !!ex: alurasportsregistryls.azurecr.io> --docker-username <username> --docker-password <password>

#version kubernetes
kubectl version

#obter os nos kubernetes
kubectl get nodes --all-namespaces
#ou
kubectl get nodes



